{"componentChunkName":"component---src-templates-blog-post-js","path":"/JS/2020-08-17-Vanilla-JS-26day-review/","result":{"data":{"site":{"siteMetadata":{"title":"서지환의 블로그","author":"[Ji hwan]","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"a5a350be-d0fe-5a22-8924-43ff33a67c52","excerpt":"이번 day에서는 각 태그들에 대한 dropdown 효과를 구현해 보았다. image 이벤트리스너 mouseenter: 마우스가 a태그에 올라가면 해당 컨텐츠들의 opacity와 display값을 바꾸어 transition 효과를 보여준다. mouseleave: 위의 transition을 제거한다. mouseenter vs mouseover mouseenter는 해당element 에서만 동작을 하게되고, mouseover는 자식 element…","html":"<p>이번 day에서는 각 태그들에 대한 dropdown 효과를 구현해 보았다.</p>\n<p><img src=\"/5ea973cd6708671fa5a4b32b9d4c0498/day26.gif\" alt=\"image\"></p>\n<h4 id=\"이벤트리스너\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8%EB%A6%AC%EC%8A%A4%EB%84%88\" aria-label=\"이벤트리스너 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트리스너</h4>\n<ul>\n<li>mouseenter: 마우스가 a태그에 올라가면 해당 컨텐츠들의 opacity와 display값을 바꾸어 transition 효과를 보여준다.</li>\n<li>mouseleave: 위의 transition을 제거한다.</li>\n</ul>\n<h4 id=\"mouseenter-vs-mouseover\" style=\"position:relative;\"><a href=\"#mouseenter-vs-mouseover\" aria-label=\"mouseenter vs mouseover permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>mouseenter vs mouseover</h4>\n<p>mouseenter는 해당element 에서만 동작을 하게되고, mouseover는 자식 element에서도 동작하는 특성이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'trigger-enter'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 먼저 display 옵션을 block으로 바꾸어 준 후 약간의 딜레이를 주어 opacity값을 변경하여 transition효과를 나타낼 수 있도록 하였다.</span>\n\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'trigger-enter'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'trigger-enter-active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  background<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> dropdown <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.dropdown'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  dropdown<span class=\"token punctuation\">.</span>getBindinga<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//getBoundingClientRect()를 통해 element의 viewport 정보, width, height값을 얻을 수 있다.</span>\n  <span class=\"token keyword\">const</span> dropdownCoords <span class=\"token operator\">=</span> dropdown<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>dropdownCoords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> navCoords <span class=\"token operator\">=</span> nav<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> coords <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    width<span class=\"token operator\">:</span> dropdownCoords<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>\n    height<span class=\"token operator\">:</span> dropdownCoords<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>\n    top<span class=\"token operator\">:</span> dropdownCoords<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> navCoords<span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 만약 a 태그들이 포함된 nav의 시작점이 페이지 최상단이 아니라면, dropdown을 감싸는 배경의 좌표가 정확하지 않을 수 있다. 이를 방지하기 위해 nav의 최상단 viewport의 top 좌표만큼을 빼 준다.</span>\n    left<span class=\"token operator\">:</span> dropdownCoords<span class=\"token punctuation\">.</span>left <span class=\"token operator\">-</span> navCoords<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n  <span class=\"token comment\">// dropdown 을 감싸는 배경의 크기는 contents의 크기와 같아야 한다.</span>\n  <span class=\"token comment\">// element.style.setProperty를 이용하여 width, height, transform 값을 바꾸어 준다.</span>\n  background<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>coords<span class=\"token punctuation\">.</span>width<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  background<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">,</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>coords<span class=\"token punctuation\">.</span>height<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  background<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span><span class=\"token function\">setProperty</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'transform'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>coords<span class=\"token punctuation\">.</span>left<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>coords<span class=\"token punctuation\">.</span>top<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px)</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// mouseleave 의 콜백함수로 classList의 class이름을 제거해준다.</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleLeave</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'trigger-enter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'trigger-enter-active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  background<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<p>네비게이션바가 항상 최 상단이 아닐수 있기 때문에 상황에 맞게 적용될 수 있도록 시작 위치의 크기를 빼서 dropdown을 적용하여 ui가 깨지는 현상을 대비할 수 있다. </p>\n<p>또한 display: none에서 display: block을 적용하면서 동시에\nopacity값을 바꾸어 주면 transition을 확인할 수 없다는 사실을 알게되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'trigger-enter'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'trigger-enter-active'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbackground<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>콜백함수인 handleEnter함수의 내부에 있는 setTimeout에서\nclassList에 trigger-enter이 존재하는지 체크를 한 후 active효과를 나타낼 수 있도록 &#x26;&#x26; 연산자를 사용하면 더욱 안정적인 구현이 가능하다.</p>","frontmatter":{"title":"[JS] Vanilla JavaScript day 26: Stripe Follow Along Dropdown","date":"August 17, 2020"}}},"pageContext":{"slug":"/JS/2020-08-17-Vanilla-JS-26day-review/","previous":{"fields":{"slug":"/JS/2020-08-14-event-loop/"},"frontmatter":{"title":"[JS] Event loop","category":"JS","draft":false}},"next":{"fields":{"slug":"/Development/2020-08-27-Line-Seminar/"},"frontmatter":{"title":"[세미나 정리] Line Plus 세미나","category":"Development","draft":false}}}}}