{"componentChunkName":"component---src-templates-blog-post-js","path":"/JS/JS30/2020-08-09-Vanilla-JS-17day-review/","result":{"data":{"site":{"siteMetadata":{"title":"서지환의 블로그","author":"[Ji hwan]","siteUrl":"https://seojihwan.github.io","comment":{"disqusShortName":"https-seojihwan-github-io","utterances":"seojihwan/seojihwan.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"29e46ab6-7902-53f7-9b2f-cce61f8af194","excerpt":"day 17: Sort Without Articles 다음 band들을 Article을 제외한 String으로 정렬해보자 The, A, An으로 시작되는 문자를 제외하고 나머지의 문자로 정렬을 해야한다.\n하지만 는 A로 시작하지만 제외해서는 안된다.\n따라서 각 Article 뒤에 공란을 포함한 상태로 문자열을 체크해야 한다. replace에 정규식을 이용하여 간단하게 표현할 수 있다. strip이라는 함수는 문자열을 받고 ‘a ’, ‘the ’, ‘an…","html":"<h3 id=\"day-17-sort-without-articles\" style=\"position:relative;\"><a href=\"#day-17-sort-without-articles\" aria-label=\"day 17 sort without articles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>day 17: Sort Without Articles</h3>\n<p>다음 band들을 Article을 제외한 String으로 정렬해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> bands <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'The Plot in You'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'The Devil Wears Prada'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Pierce the Veil'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Norma Jean'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'The Bled'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Say Anything'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'The Midway State'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'We Came as Romans'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Counterparts'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Oh, Sleeper'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'A Skylit Drive'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'Anywhere But Here'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'An Old Dog'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The, A, An으로 시작되는 문자를 제외하고 나머지의 문자로 정렬을 해야한다.\n하지만 <code class=\"language-text\">Anywhere But Here</code>는 A로 시작하지만 제외해서는 안된다.\n따라서 각 Article 뒤에 공란을 포함한 상태로 문자열을 체크해야 한다.</p>\n<p>replace에 정규식을 이용하여 간단하게 표현할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">strip</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/^(a |the |an )/i</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>strip이라는 함수는 문자열을 받고 ‘a ’, ‘the ’, ‘an ‘으로 시작 되는지를 대소문자에 상관없이 확인하고, 공백을 없애서 반환해준다.</p>\n<p>^를 통해 input의 시작점을 확인하고, i 플래그는 대 소문자를 구별하지 않기위해 사용된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> sortedBands <span class=\"token operator\">=</span> bands<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token function\">strip</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token function\">strip</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#bands'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> sortedBands\n  <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">band</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>band<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> &lt;/li></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>정렬된 band들의 정보들을 map을통해 li태그로 구성된 array를 만들고 join하여 하나의 스트링으로 만든다.</p>\n<p>li태그들을 innerHTML을 이용해 ul의 child로 구성한다.</p>\n<h4 id=\"결과화면\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC%ED%99%94%EB%A9%B4\" aria-label=\"결과화면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과화면</h4>\n<p><img src=\"./image/day17.PNG\" alt=\"image\"></p>","frontmatter":{"title":"[JS] Vanilla JavaScript day 17: Sort Without Articles","date":"August 09, 2020"}}},"pageContext":{"slug":"/JS/JS30/2020-08-09-Vanilla-JS-17day-review/","previous":{"fields":{"slug":"/JS/JS30/2020-08-09-Vanilla-JS-16day-review/"},"frontmatter":{"title":"[JS] Vanilla JavaScript day 16: Text Shadow Mouse Move Effect","category":"JS","draft":false}},"next":{"fields":{"slug":"/JS/2020-08-13-Call-Stack/"},"frontmatter":{"title":"[JS] Call Stack","category":"JS","draft":false}}}}}