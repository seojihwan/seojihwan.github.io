{"componentChunkName":"component---src-templates-blog-post-js","path":"/JS/JS30/2020-07-22-Vanilla-JS-1day-review/","result":{"data":{"site":{"siteMetadata":{"title":"서지환의 블로그","author":"[Ji hwan]","siteUrl":"https://seojihwan.github.io","comment":{"disqusShortName":"https-seojihwan-github-io","utterances":"seojihwan/seojihwan.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"ca65dfbc-aa86-5783-a9b7-a7b6a9a92ee1","excerpt":"day 1 Drum Kit day 1은 keydown 이벤트를 활용하여 특정 키를 눌렀을 때 드럼의 소리가 나오도록 만드는 과정을 해보았다. 키보드의 A,S,D,F,G,H,J,K,L을 눌렀을 때 서로 다른 audio가 동작한다. 먼저 각 키보드 입력의 keyCode와 동작시킬 사운드 파일의 이름을 배열로 만들어주었다. element로는 입력 키보드 자판을 알려주는 keyIdx, 동작할 드럼의 이름인 drumName\n이를 감싸는 각각의 keyboard, 모든 키를 감싸는 keysWrapper…","html":"<h3 id=\"day-1-drum-kit\" style=\"position:relative;\"><a href=\"#day-1-drum-kit\" aria-label=\"day 1 drum kit permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>day 1 Drum Kit</h3>\n<p>day 1은 keydown 이벤트를 활용하여 특정 키를 눌렀을 때 드럼의 소리가 나오도록 만드는 과정을 해보았다.</p>\n<p>키보드의 A,S,D,F,G,H,J,K,L을 눌렀을 때 서로 다른 audio가 동작한다.</p>\n<p>먼저 각 키보드 입력의 keyCode와 동작시킬 사운드 파일의 이름을 배열로 만들어주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// array for keyCode</span>\n<span class=\"token keyword\">const</span> keys <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">76</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// array for soundFile</span>\n<span class=\"token keyword\">const</span> keyNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'boom'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'clap'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'hihat'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'kick'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'openhat'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'ride'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'snare'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'tink'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'tom'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>element로는 입력 키보드 자판을 알려주는 keyIdx, 동작할 드럼의 이름인 drumName\n이를 감싸는 각각의 keyboard, 모든 키를 감싸는 keysWrapper 라는 div들과\nsrc로 wav파일을 갖는 audio를 사용하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// wrapper Div</span>\n<span class=\"token keyword\">const</span> keysWrapper <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nkeysWrapper<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'keysWrapper'</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>keysWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create keyboard and audio element.</span>\nkeys<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> idx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> keyboard <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> audio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'audio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> keyIdx <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> drumName <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  drumName<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> keyNames<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  drumName<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'drumName'</span><span class=\"token punctuation\">;</span>\n  keyIdx<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> String<span class=\"token punctuation\">.</span><span class=\"token function\">fromCharCode</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  keyIdx<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'keyIdx'</span><span class=\"token punctuation\">;</span>\n  keyboard<span class=\"token punctuation\">.</span>className <span class=\"token operator\">=</span> <span class=\"token string\">'key'</span><span class=\"token punctuation\">;</span>\n  keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>keyIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>drumName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyCode'</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  audio<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./sound/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>keyNames<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.wav</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  audio<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keyCode'</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  keysWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>keyboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>array.forEach는 필수 옵션으로 array의 element를 갖고, 선택 옵션으로 ,idx와 배열 전체의 요소를 갖을 수 있다.</p>\n<p>이를 통해 반복요소를 줄일 수 있다.</p>\n<p>innerHTML은 dom을 rebuild하는 method로 기존의 content는 사라진다.</p>\n<p>appendChild는 해당 element의 마지막 자식 뒤에 element를 추가하는 method이다.</p>\n<p>setAttribute는 임의의 property를 지정하여, 2번째 요소로 값을 바꿀수 있다.</p>\n<p>window에 keydown 이벤트리스너를 추가하고, keydown이 발생하였을 경우\n눌러진 키에 playing이라는 classList를 추가하여, 화면에서 해당 key를 표현하고, audio가 실행되도록 하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// add classList to downKey and play audio using event.keyCode.</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">playAudio</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> downKey <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.key[keyCode=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>keyCode<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>downKey<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  downKey<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'playing'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> audio <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">audio[keyCode=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>keyCode<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>audio<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  audio<span class=\"token punctuation\">.</span>currentTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  audio<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// window has a keydown EventListner</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'keydown'</span><span class=\"token punctuation\">,</span> playAudio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>querySelectorAll을 이용하여 NodeList에 접근하고, 각각의 요소에 transitionend라는 이벤트리스너를 추가하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">removeTransition</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>propertyName <span class=\"token operator\">!==</span> <span class=\"token string\">'transform'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">'playing'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// each keyboards has an transitionend EventListner.</span>\n<span class=\"token keyword\">const</span> keyboards <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.key'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nkeyboards<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">keyboard</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'transitionend'</span><span class=\"token punctuation\">,</span> removeTransition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이를통해 playAudio함수가 동작하고 playing이라는 classList가 추가되면\nCSS에 의해 transition이 발생하고, transition이 end되었을 때\ntransitioned 이벤트 리스너가 동작하여, playing이라는 classList를 다시 제거해\n주게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.playing</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>1.1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-color</span><span class=\"token punctuation\">:</span> #ffc600<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 0 0 1rem #ffc600<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>결과 화면</p>\n<p><img src=\"/3b7841288bb2847f28d6d622092d7756/drumkit.gif\" alt=\"image\"></p>","frontmatter":{"title":"[JS] Vanilla JavaScript day 1: Drum Kit","date":"July 22, 2020"}}},"pageContext":{"slug":"/JS/JS30/2020-07-22-Vanilla-JS-1day-review/","previous":{"fields":{"slug":"/CS/Network/2020-07-20-TCP-IP/"},"frontmatter":{"title":"[Network] TCP / IP, UDP","category":"CS","draft":false}},"next":{"fields":{"slug":"/JS/JS30/2020-07-24-Vanilla-JS-2day-review/"},"frontmatter":{"title":"[JS] Vanilla JavaScript day 2: Clock","category":"JS","draft":false}}}}}