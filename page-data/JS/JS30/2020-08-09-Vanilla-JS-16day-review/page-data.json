{"componentChunkName":"component---src-templates-blog-post-js","path":"/JS/JS30/2020-08-09-Vanilla-JS-16day-review/","result":{"data":{"site":{"siteMetadata":{"title":"서지환의 블로그","author":"[Ji hwan]","siteUrl":"https://seojihwan.github.io","comment":{"disqusShortName":"https-seojihwan-github-io","utterances":"seojihwan/seojihwan.github.io"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"9620582c-8918-5c10-b839-cd30cb081fe1","excerpt":"day 16: Text Shadow Mouse Move Effect day 16에서는 마우스 위치를 이용하여 h1태그의 textShadow값을 변화 시켜 보았다. h1을 포함하는 div에 mousemove 이벤트 리스너를 추가하고 발생하는 event의 offsetX, offsetY 값을 이용하였다. 마우스 커서가 h1을 포함하는 div에 있을때와 h1에 있을때 offsetX, offsetY좌표는 다르다. event가 발생하는 target의 element 기준으로 좌표가 바뀌기 때문이다.\n따라서 h…","html":"<h3 id=\"day-16-text-shadow-mouse-move-effect\" style=\"position:relative;\"><a href=\"#day-16-text-shadow-mouse-move-effect\" aria-label=\"day 16 text shadow mouse move effect permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>day 16: Text Shadow Mouse Move Effect</h3>\n<p>day 16에서는 마우스 위치를 이용하여 h1태그의 textShadow값을 변화 시켜 보았다.</p>\n<p>h1을 포함하는 div에 mousemove 이벤트 리스너를 추가하고 발생하는 event의 offsetX, offsetY 값을 이용하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">hero<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mousemove'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span>handleMousemove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>마우스 커서가 h1을 포함하는 div에 있을때와 h1에 있을때 offsetX, offsetY좌표는 다르다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleMousemove</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> offsetWidth<span class=\"token operator\">:</span> width<span class=\"token punctuation\">,</span> offsetHeight<span class=\"token operator\">:</span> height <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> hero<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> offsetX<span class=\"token operator\">:</span> x<span class=\"token punctuation\">,</span> offsetY<span class=\"token operator\">:</span> y <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">!==</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    x <span class=\"token operator\">+=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>offsetLeft<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">+=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>offsetTop<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  x <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">/</span> width<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">/</span> height<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\n  text<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>textShadow <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>x<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>y<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px 0 rgba(111,111,111)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>event가 발생하는 target의 element 기준으로 좌표가 바뀌기 때문이다.\n따라서 h1태그 위에 마우스 포인트가 존재할때에는 offsetLeft와 offsetTop값을 이용하여 부모요소와의 거리를 추가적으로 더해주었다.</p>\n<p>또한 mousemove이벤트의 빈도를 줄이기 위해 13day에서 배운 throttle을 이용하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> wait <span class=\"token operator\">=</span> <span class=\"token number\">30</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> timeout<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>timeout<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      timeout <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>\n        <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          timeout <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        wait\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>또한 this는 setTimeout을 이용한 throttle에서 window가 되기 때문에\nsetTimeout에 전달하는 함수를 bind해 주었다.</p>\n<p>그다음 throttle에 전달된 함수를 call을 이용하여 this와 연결한 후 호출하면 callback함수에서 this객체를 window가 아닌 이벤트가 추가된 객체로 설정할 수 있다.</p>\n<hr>\n<p>또는 arrow function을 이용하여 lexical context인 element를 this로 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> wait <span class=\"token operator\">=</span> <span class=\"token number\">30</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> timeout<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> args <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>timeout<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      timeout <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        timeout <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> wait<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"결과화면\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC%ED%99%94%EB%A9%B4\" aria-label=\"결과화면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과화면</h4>\n<p><img src=\"/83e32fc02501cb4c317324b791e99745/day16.gif\" alt=\"image\"></p>","frontmatter":{"title":"[JS] Vanilla JavaScript day 16: Text Shadow Mouse Move Effect","date":"August 09, 2020"}}},"pageContext":{"slug":"/JS/JS30/2020-08-09-Vanilla-JS-16day-review/","previous":{"fields":{"slug":"/JS/JS30/2020-08-08-Vanilla-JS-15day-review/"},"frontmatter":{"title":"[JS] Vanilla JavaScript day 15: LocalStorage","category":"JS","draft":false}},"next":{"fields":{"slug":"/JS/JS30/2020-08-09-Vanilla-JS-17day-review/"},"frontmatter":{"title":"[JS] Vanilla JavaScript day 17: Sort Without Articles","category":"JS","draft":false}}}}}